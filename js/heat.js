function plotComparatorChart(xValues, yValues, zValues, callWhenDone) {
    var colorscaleValue = [
      [0, '#ff0000'],  // ultramarine blue '#0d407f'
      [1, '#0000ff']   // buttons bg green '#7dae3e' // '#6d9e2e'
    ];

    var ztextLine = Array(xValues.length).fill("");
    var ztext = Array(yValues.length).fill(ztextLine);

    var data = [{
      x: xValues,
      y: yValues,
      z: zValues,
      // hovertext: [["a", "a"], ["a", "a"]],
      type: 'heatmap',
      colorscale: colorscaleValue,
      showscale: false,
      zmin: -1,
      zmax: 1,
      zauto: false
    }];

    var layout = {
      //title: "Generated by the Adeptus Optimus",
      title:{
          "y" : 0.0012,
          "yanchor" : "bottom",
          "text": "Generated by the Adeptus Optimus"
      },
      titlefont: {
          size: 13
      },
      annotations: [""],
      xaxis: {
        ticks: '',
        side: 'top',
        title: "Save and Invulnerable Save of the target unit"

      },
      yaxis: {
        ticks: '',
        ticksuffix: ' ',
        autosize: true,
        title: "Toughness and Wounds and Feel No Pain of the target unit"
      },
      margin: {
        t: 75,
        b: 15
      },
      height: 2000,
    };

    for ( var i = 0; i < yValues.length; i++ ) {
      for ( var j = 0; j < xValues.length; j++ ) {
        var currentValue = zValues[i][j];
        if (currentValue != 0.0) {
          var textColor = 'white';
        } else {
          var textColor = 'white';
        }
        var result = {
          xref: 'x1',
          yref: 'y1',
          x: xValues[j],
          y: yValues[i],
          text: "", // zValues[i][j],
          font: {
            family: 'Arial',
            size: 14,
            color: 'rgb(50, 171, 96)'
          },
          showarrow: false,
          font: {
            color: textColor
          }
        };
        layout.annotations.push(result);
      }
    }
    const sleep = milliseconds => new Promise(resolve => setTimeout(resolve, milliseconds))
    // Using callbacks
    // sleep(2500).then(() => {
    Plotly.newPlot('chart', data, layout);
    document.getElementById("chart").innerHTML += "<br/>";
    console.log("Plotly.newPlot called");
    callWhenDone();
}

